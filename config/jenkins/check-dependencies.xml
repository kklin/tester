<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Check for any updates to our dependencies.</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>0 0 */3 * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>set +e
export GOPATH=${WORKSPACE}/gohome
export PATH=${GOPATH}/bin:${WORKSPACE}/bin:${PATH}

srcPath=$GOPATH/src/github.com/quilt/quilt
mkdir -p ${srcPath}
git clone https://github.com/quilt/quilt.git ${srcPath}

cd ${srcPath}
make get-build-tools

# Fetch newest version of all vendor&apos;d packages, and remove any unused
# packaged, and see if resulting git tree is dirty.
govendor remove +unused
govendor fetch -v +vendor
if ! git diff-index --quiet HEAD -- ; then
  # Run the tests so that it&apos;s easy to tell if any breaking changes were introduced.
  make install check lint

  echo "ERROR: Vendoring is out of date (it is missing new updates and/or includes packages that are no longer necessary). The correct vendoring includes these changes:"
  git status
  exit 1
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain>{{slackTeam}}</teamDomain>
      <authToken>{{slackToken}}</authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>{{slackChannel}}</room>
      <startNotification>false</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyRegression>false</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <includeFailedTests>false</includeFailedTests>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.33">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <jenkins.plugins.nodejs.NodeJSBuildWrapper plugin="nodejs@1.2.2">
      <nodeJSInstallationName>node-7.10.0</nodeJSInstallationName>
    </jenkins.plugins.nodejs.NodeJSBuildWrapper>
    <org.jenkinsci.plugins.golang.GolangBuildWrapper plugin="golang@1.2">
      <goVersion>go-1.8</goVersion>
    </org.jenkinsci.plugins.golang.GolangBuildWrapper>
  </buildWrappers>
</project>
