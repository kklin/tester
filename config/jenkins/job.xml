<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>PROVIDER</name>
          <description>The provider to use for the test run.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Amazon</string>
              <string>DigitalOcean</string>
              <string>Google</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SIZE</name>
          <description>The machine size to use for the test run.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>QUILT_VERSION</name>
          <description>The Quilt release to test.</description>
          <defaultValue>dev</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.parameterizedscheduler.ParameterizedTimerTrigger plugin="parameterized-scheduler@0.4">
      <spec></spec>
      <parameterizedSpecification>0 0-23/3 * * * %PROVIDER=Amazon;SIZE=m3.medium
0 1-23/3 * * * %PROVIDER=Google;SIZE=n1-standard-1
0 2-23/3 * * * %PROVIDER=DigitalOcean;SIZE=2gb</parameterizedSpecification>
    </org.jenkinsci.plugins.parameterizedscheduler.ParameterizedTimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>mkdir ${WORKSPACE}/bin
curl -sL -o ${WORKSPACE}/bin/quilt https://github.com/quilt/quilt/releases/download/${QUILT_VERSION}/quilt_linux
chmod 755 ${WORKSPACE}/bin/quilt

export GOPATH=${WORKSPACE}/gohome
export PATH=${GOPATH}/bin:${WORKSPACE}/bin:${PATH}

go get -v github.com/quilt/tester

cd $GOPATH/src/github.com/quilt/tester
make tests
tester --preserve-failed -testRoot=./tests -junitOut=${WORKSPACE}/report.xml</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.log,*_debug_logs/**/*</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.27">
        <script>manager.addShortText(&quot;${manager.build.buildVariables.get(&apos;QUILT_VERSION&apos;)}&quot;)
manager.addShortText(&quot;${manager.build.buildVariables.get(&apos;PROVIDER&apos;)}&quot;)</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.20">
      <testResults>report.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.9"/>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.2">
      <baseUrl></baseUrl>
      <teamDomain>{{slackTeam}}</teamDomain>
      <authToken>{{slackToken}}</authToken>
      <authTokenCredentialId></authTokenCredentialId>
      <botUser>false</botUser>
      <room>{{slackChannel}}</room>
      <startNotification>false</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>true</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyRegression>true</notifyRegression>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>true</includeTestSummary>
      <includeFailedTests>true</includeFailedTests>
      <commitInfoChoice>AUTHORS_AND_TITLES</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.32">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <jenkins.plugins.nodejs.NodeJSBuildWrapper plugin="nodejs@1.2.1">
        <nodeJSInstallationName>node-7.10.0</nodeJSInstallationName>
    </jenkins.plugins.nodejs.NodeJSBuildWrapper>
    <org.jenkinsci.plugins.golang.GolangBuildWrapper plugin="golang@1.2">
      <goVersion>go-1.7</goVersion>
    </org.jenkinsci.plugins.golang.GolangBuildWrapper>
  </buildWrappers>
</project>
